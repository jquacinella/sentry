version: '2'
services:
  data:
    container_name: sentry-data
    hostname: sentry-data
    image: busybox:latest
    # volumes:
    #   - ./data/:/data
    #   - ./db_data/:/var/lib/postgresql/data
    entrypoint: /bin/echo

  redis:
    container_name: sentry-redis
    hostname: sentry-redis
    image: redis:2.8
    volumes_from:
      - data
    restart: always

  postgres:
    container_name: sentry-postgres
    hostname: sentry-postgres
    image: postgres:9.4
    volumes_from:
      - data
    restart: always

  sentry:
    container_name: sentry
    hostname: sentry
    image: sentry_image
    ports:
      - "8080:8080"
    links:
      - postgres
      - redis
    volumes_from:
      - data
    depends_on:
      - postgres
      - redis
    volumes:
      - ./sentry.conf.py:/root/.sentry/sentry.conf.py
      - ./config.yml:/root/.sentry/config.yml
    entrypoint: sentry
    command: start --noinput
    env_file:
      - secrets/environment.sh
    # restart: always

  sentry_celery_beat:
    container_name: sentry_celery_beat
    hostname: sentry_celery_beat
    image: sentry_image
    links:
     - redis
     - postgres
    command: "sentry celery beat"
    volumes:
      - ./sentry.conf.py:/root/.sentry/sentry.conf.py
      - ./config.yml:/root/.sentry/config.yml
    depends_on:
      - postgres
      - redis

  sentry_celery_worker:
    container_name: sentry_celery_worker
    hostname: sentry_celery_worker
    image: sentry_image
    links:
     - redis
     - postgres
    command: "sentry celery worker"
    environment: 
      - C_FORCE_ROOT=True
    volumes:
      - ./sentry.conf.py:/root/.sentry/sentry.conf.py
      - ./config.yml:/root/.sentry/config.yml
    depends_on:
      - postgres
      - redis
